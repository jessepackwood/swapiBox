// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App test Should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="App-title"
>
          SwapiBox
</h1>,
        <div
          className="App-container"
>
          <ScrollText
                    className="scroll-text"
                    film={Object {}}
                    onSkip={[Function]}
          />
</div>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "SwapiBox",
          "className": "App-title",
        },
        "ref": null,
        "rendered": "SwapiBox",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ScrollText
              className="scroll-text"
              film={Object {}}
              onSkip={[Function]}
/>,
            false,
          ],
          "className": "App-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "scroll-text",
              "film": Object {},
              "onSkip": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="App-title"
>
            SwapiBox
</h1>,
          <div
            className="App-container"
>
            <ScrollText
                        className="scroll-text"
                        film={Object {}}
                        onSkip={[Function]}
            />
</div>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "SwapiBox",
            "className": "App-title",
          },
          "ref": null,
          "rendered": "SwapiBox",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ScrollText
                className="scroll-text"
                film={Object {}}
                onSkip={[Function]}
/>,
              false,
            ],
            "className": "App-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "scroll-text",
                "film": Object {},
                "onSkip": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
